<template>
  <div class="item">
    <!-- 每个待办事项以列表形式呈现 -->
      <list class='micro-list'>
        <list-item class="micro-text" type="item" onclick="turnToEdit()" >
          <div class="title">
            <text class="text1">{{ todo.title }}</text>
            <text class="label" style="{{todo.label | calLabelColor}}">{{
              todo.label
            }}</text>
          </div>
          <div class="time">
              <text class="start_text">~START~ {{todo.start}}</text>
              <text class="end_text">~DDL~ {{ todo.end }}</text>
          </div>
        </list-item>
        <list-item class="micro-btn" type="item" index="{{todo.index}}" >
          <div class="delete-btn" onclick="delete"></div>
        </list-item>
        <list-item class="micro-btn" type="item" index="{{todo.index}}" if='{{todo.type != 3}}'>
          <div class="todone-btn" onclick="todone"></div>
        </list-item>
      </list>
  </div>
</template>

<script>
import { getTodoList, setTodoList } from '../storage/data.js'
import { clearTodoList } from '../storage/data.js'
import router from '@system.router'
import prompt from '@system.prompt'
import storage from '@system.storage'

export default {
  data() {
    return {
      todoList:[],
      startPos: '',
      right: 0,
      canMove: true
    }
  },

  props: {
    todo: {
      default: {}
    },
    index: ''
  },

  calTime(time) {
    const date = new Date(time)
    const year = date.getFullYear()
    const month = date.getMonth() + 1
    const day = date.getDate()
    return `${year}/${month}/${day}`
  },

  turnToEdit() {
    router.push({
      uri: 'pages/add/add_todo',
      params: {
        title: this.todo.title,
        start:this.todo.start,
        end:this.todo.end,
        index: this.index
      }
    })
  },

  
  delete() {
    prompt.showDialog({
      title: '提示',
      message: '是否删除这条记录',
      buttons: [
        {
          text: '确定',
          color: '#ff2828'
        },
        {
          text: '取消',
          color: '#000000'
        }
      ],
      success: data => {
        console.log('handling callback', data)
        if (data.index === 0) {
          this.right = 0
          this.$emit('delete', { index: this.index })
          prompt.showToast({
            message: '删除成功'
          })
        }
      },
      cancel: function() {
        console.log('handling cancel')
      },
      fail: function(data, code) {
        console.log(`handling fail, code = ${code}`)
      }
    })
  },
  
// 将已完成的待办事项标记成完成
  todone() {
    // 将要标记为完成的编号传递给父组件
    this.$emit('todone', { index: this.index })
  },  

  calLabelColor(label) {
    if (!label || label === '普通') {
      return 'color: rgb(127,137,115);'
    } else if (label === '一般') {
      return 'color: rgb(161,165,183);'
    } else {
      return 'color: rgb(143,85,88);'
    }
  }
}
</script>

<style lang="less">
@import '../assets/styles/style.less';
.item {
  flex: 1;
  margin-bottom: 0px;
  .micro-list {
    height: 70px;
    margin-left: 0px;
    width: 360px;
    flex: 1;
    flex-direction: row;
    .micro-text {
      height: 60px;
      width: 340px;
      flex-direction: column;
      margin-left: 0px;
      margin-right: 5px;
      flex-grow: 0;
      background-color: #ffffff;
      border: 1px solid rgb(238, 240, 245);
      border-radius: 20px;
      .title{
        /* text-align: center;; */
        .text1 {
          height:100%;
          width:75%;
          text-align: left;
          padding-top: 8px;
          padding-left: 15px;
          font-weight: bold;
          font-size: 20px;
          font-family: serif;
          color: #000000;
        }
        .label{
          height:100%;
          width:20%;
          text-align: right;
          padding-top: 5px;
          margin-right: 0px;
          font-size: 16px;
          font-family: serif;
        }
      }
      .time {
        height:50%;
        margin-bottom: 0px;
        padding-left: 10px;
        .start_text{
          text-align: left;
          width: 50%;
          font-size: 12px;
          margin-left: 5px;
          font-style: italic;
          font-family: Georgia;
        }
        .end_text{
          text-align: right;
          width: 50%;
          font-size: 13px;
          margin-right: 15px;
          color:#1296db;
          font-style: italic;
          font-family: Georgia;
        }
      }
    }
    .micro-btn {
      flex: 0;
      /* height: 40px;
      width: 30px; */
      background-color: rgb(238, 235, 235);
    }
    .todone-btn {
      width: 30px;
      height: 30px;
      margin-left: 0px;
      margin-right: 10px;
      margin-top: 15px;
      background-image: url("/assets/images/todone.png");
    }
    .delete-btn {
      text-align: center;
      width: 30px;
      height:30px;
      margin-left: 3px;
      margin-right: 10px;
      margin-top: 15px;
      background-image: url("/assets/images/delete.png");
    }
  }
}

</style>
